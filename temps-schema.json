type CapacityDetails {
	groupName: String!
	capacityHours: Float!
	effortsSuggested: Float!
	effortsPlanned: Float!
	effortsAdded: Float!
	effortsDelivered: Float!
}

type CapacityHours {
	date: AWSDate!
	hours: Float!
	type: Int!
}

type DefaultCapacityHours {
	dayOfWeek: Int!
	hours: Float!
}

type Members {
	id: ID!
	name: String!
	role: String!
	photoSrc: AWSURL!
	defaultCapacityHours: [DefaultCapacityHours!
  ]!
	capacityHours: [CapacityHours!
  ]!
}

type Mutation {
	putMember(
		id: ID!,
		name: String!,
		role: String!,
		photoSrc: AWSURL!,
		defaultCapacityHours: AWSJSON!
	): Members
}

type Query {
	# Get a single value of type 'Sprint' by primary key.
	singlePost(id: ID!): Sprint
}

type Sprint {
	sprintId: ID!
	sprintNumber: String!
	startDate: AWSDate!
	endDate: AWSDate!
	iterationPath: String!
	sprintLength: Int!
	lastSprintId: ID!
	capacityDetails: CapacityDetails!
	team: Team!
}

type Team {
	teamId: ID!
	teamName: String!
	defaultSprintLength: Int!
	members: [Members!
  ]!
}

schema {
	query: Query
	mutation: Mutation
}